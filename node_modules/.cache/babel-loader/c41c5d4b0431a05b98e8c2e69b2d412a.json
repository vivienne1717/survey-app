{"ast":null,"code":"var _jsxFileName = \"/Users/wei/Desktop/Project/Recommendation/Pre-exp Survey/website/survey-app2/src/Pages/MovieList.jsx\";\nimport * as React from \"react\";\nimport \"./MovieList.css\";\nimport \"./Movie\";\nimport Movie from \"./Movie\";\nimport MovieFullList1 from '../Assets/MovieFullList2';\nimport Part1Modal from \"./Part1Modal.jsx\";\nimport { Pagination } from 'antd';\nimport Cookies from 'universal-cookie';\nimport { Row, Col } from 'antd';\nimport SurveyWithPoster from \"./SurveyWithPoster\";\nexport default class MovieList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.childRef = React.createRef();\n    this.state = {\n      genre: \"Genre 1\",\n      listOfMovies: Array,\n      filteredMovies: Array,\n      displayMovies: Array,\n      currentPage: 1,\n      pageSize: 150,\n      selectedMovies: Array,\n      surveyMovies: [],\n      selectedMovie2: Array,\n      surveyComplete: false\n    };\n\n    this.filterMovieList = (movieList, genreList, yearFilter) => {\n      let result1 = [];\n      movieList.forEach(movie => {\n        var year = parseInt(movie.year);\n        var genres = movie.genres;\n        var genresInArr = genres.split(',').map(item => item.trim());\n        let intersect = genresInArr.filter(value => -1 !== genreList.indexOf(value));\n        let yearStart = 1995;\n        let yearEnd = 2019;\n\n        if (yearFilter !== 'All Movies') {\n          yearStart = parseInt(yearFilter.split('-')[0]);\n          yearEnd = parseInt(yearFilter.split('-')[1]);\n        }\n\n        if (intersect.length > 0 && yearStart <= year && year <= yearEnd) result1.push(movie);\n      });\n      var ranchoose = [];\n      var result = [];\n\n      while (ranchoose.length < result1.length) {\n        var ranum = Math.floor(Math.random() * result1.length) + 0;\n\n        if (ranchoose.indexOf(ranum) == -1) {\n          ranchoose.push(ranum);\n          result.push(result1[ranum]);\n        }\n      }\n\n      return result;\n    };\n\n    this.createMovieList = (page, pageSize) => {\n      let list = []; //console.log(\"now rendering movie list \"+ JSON.stringify(this.state.listOfMovies))\n\n      const cookies = new Cookies();\n      let survey2 = cookies.get('survey2'); //console.log('survey 2 now contains' + JSON.stringify(survey2))\n\n      this.state.filteredMovies.forEach(movie => {\n        if (!movie['rating'] && movie['rating'] !== 0.0) movie['rating'] = 0.0;\n\n        if (this.props.fromStep3) {\n          if (!this.checkSurvey2Contains(survey2, movie)) {\n            var movie_ = React.createElement(Col, {\n              span: 3,\n              style: {\n                width: 'auto',\n                height: 425,\n                padding: 5\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, \" \", React.createElement(Movie, {\n              SingleMovie: movie,\n              onAddMovie: this.addMovieToSelection,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }));\n            list.push(movie_);\n          }\n        } else {\n          var movie_ = React.createElement(Col, {\n            span: 3,\n            style: {\n              width: 'auto',\n              height: 425,\n              padding: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \" \", React.createElement(Movie, {\n            SingleMovie: movie,\n            onAddMovie: this.addMovieToSelection,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }));\n          list.push(movie_);\n        }\n      });\n      var starting = (page - 1) * pageSize;\n      var ending = starting + pageSize > this.state.filteredMovies.length ? this.state.filteredMovies.length : starting + pageSize;\n      return list.slice(starting, ending);\n    };\n\n    this.onShowSizeChange = (current, pageSize) => {\n      var list = this.createMovieList(1, pageSize);\n      this.setState({\n        currentPage: 1,\n        pageSize: pageSize,\n        displayMovies: list\n      });\n    };\n\n    this.onPageChange = (page, pageSize) => {\n      var list = this.createMovieList(page, pageSize);\n      this.setState({\n        currentPage: page,\n        displayMovies: list\n      });\n    };\n\n    this.addMovieToSelection = movie => {\n      var fromStep3 = this.props.fromStep3; //console.log(\"from Step 3 \" + fromStep3)\n\n      const cookies = new Cookies();\n\n      if (fromStep3) {\n        var selectedMovies = this.state.selectedMovies;\n\n        if (selectedMovies.length >= 0 && selectedMovies.length < 20) {\n          if (selectedMovies.indexOf(movie) === -1) selectedMovies.push(movie);else {\n            if (movie['rating'] <= 0) {\n              var index = selectedMovies.indexOf(movie);\n              selectedMovies.splice(index, 1);\n            }\n          }\n        }\n\n        if (selectedMovies.length === 3) {\n          selectedMovies.forEach(movie => {\n            movie.ans = [8, 8, 8, 8, 8, 8, 8]; // initialze ans for survery qns\n          });\n          this.childRef.current.toggleVisible();\n        }\n\n        this.setState({\n          surveyMovies: selectedMovies\n        });\n      } else {\n        var selectedMovies = this.state.selectedMovies;\n\n        if (selectedMovies.length >= 0 && selectedMovies.length < 20) {\n          if (selectedMovies.indexOf(movie) === -1) selectedMovies.push(movie);else {\n            if (movie['rating'] <= 0) {\n              var index = selectedMovies.indexOf(movie);\n              selectedMovies.splice(index, 1);\n            }\n          }\n        } //set the number of movies required selection \n\n\n        if (selectedMovies.length === 15) {\n          //change above to 20, in production\n          cookies.set('survey2a', this.reduceCookieSize(selectedMovies), {\n            path: '/'\n          }); //console.log(\"survey 2a \" + JSON.stringify(selectedMovies))\n\n          selectedMovies = this.selectRandomMovies(selectedMovies, 5, 15); //change no. as well if change no. of selected movies\n\n          selectedMovies.forEach(movie => {\n            movie.ans = [8, 8, 8, 8, 8, 8, 8]; // initialze ans for survery qns\n          });\n          this.childRef.current.toggleVisible();\n        }\n\n        this.setState({\n          surveyMovies: selectedMovies\n        });\n      }\n    };\n\n    this.checkSurveyComplete = value => {\n      this.setState({\n        surveyComplete: true\n      });\n    };\n  }\n\n  componentWillMount() {\n    var genreFilters = this.props.genreFilters;\n    var yearFilter = this.props.yearFilter;\n    let filteredMovies = [];\n    if (genreFilters.length > 0) filteredMovies = this.filterMovieList(MovieFullList1, genreFilters, yearFilter);\n    this.setState({\n      listOfMovies: MovieFullList1,\n      displayMovies: [],\n      filteredMovies: filteredMovies,\n      selectedMovies: [],\n      selectedMovies2: []\n    });\n  }\n\n  componentDidMount() {\n    let list = this.createMovieList(this.state.currentPage, this.state.pageSize);\n    this.setState({\n      displayMovies: list\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var genreFilters = nextProps.genreFilters;\n    var yearFilter = nextProps.yearFilter;\n    let filteredMovies = [];\n    if (genreFilters.length > 0) filteredMovies = this.filterMovieList(MovieFullList1, genreFilters, yearFilter);\n    this.setState({\n      filteredMovies: filteredMovies\n    }, () => {\n      //update display list \n      let displayList = this.createMovieList(1, this.state.pageSize);\n      this.setState({\n        displayMovies: displayList,\n        currentPage: 1\n      });\n    });\n  }\n\n  checkSurvey2Contains(survey2, movie) {\n    var result = false;\n\n    for (var i = 0; i < survey2.length; i++) {\n      var movieId = survey2[i].movieId;\n      var _movieId = movie.movieId;\n      if (movieId === _movieId) result = true;\n    }\n\n    return result;\n  }\n\n  selectRandomMovies(movies, wantNumber, maxNumber) {\n    var numberList = [];\n    var movieList = [];\n\n    while (numberList.length < wantNumber) {\n      var num = Math.floor(Math.random() * (maxNumber - 1 - 0 + 1)) + 0;\n\n      if (numberList.indexOf(num) == -1) {\n        numberList.push(num);\n        movieList.push(movies[num]);\n      }\n    }\n\n    return movieList;\n  }\n\n  reduceCookieSize(selectedMovies) {\n    let slimCookie = [];\n\n    for (var i = 0; i < selectedMovies.length; i++) {\n      var movie = {};\n      movie.title = selectedMovies[i].title;\n      movie.movieId = selectedMovies[i].movieId;\n      movie.rating = selectedMovies[i].rating;\n      movie.ans = selectedMovies[i].ans;\n      slimCookie.push(movie);\n    }\n\n    return slimCookie;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"You have selected \", this.state.selectedMovies.length, \"/\", this.props.fromStep3 ? 3 : 15, \" movies\"), React.createElement(\"div\", {\n      className: \"list-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: [24, 20],\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.displayMovies)), React.createElement(Pagination, {\n      showSizeChanger: true,\n      pageSizeOptions: ['50', '100', '150', '200'],\n      onShowSizeChange: this.onShowSizeChange,\n      current: this.state.currentPage,\n      defaultCurrent: 2,\n      pageSize: this.state.pageSize,\n      onChange: this.onPageChange,\n      total: this.state.filteredMovies.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(Part1Modal, {\n      ref: this.childRef,\n      selectedMovies: this.state.surveyMovies,\n      onSurveyComplete: this.checkSurveyComplete,\n      fromStep3: this.props.fromStep3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/wei/Desktop/Project/Recommendation/Pre-exp Survey/website/survey-app2/src/Pages/MovieList.jsx"],"names":["React","Movie","MovieFullList1","Part1Modal","Pagination","Cookies","Row","Col","SurveyWithPoster","MovieList","Component","childRef","createRef","state","genre","listOfMovies","Array","filteredMovies","displayMovies","currentPage","pageSize","selectedMovies","surveyMovies","selectedMovie2","surveyComplete","filterMovieList","movieList","genreList","yearFilter","result1","forEach","movie","year","parseInt","genres","genresInArr","split","map","item","trim","intersect","filter","value","indexOf","yearStart","yearEnd","length","push","ranchoose","result","ranum","Math","floor","random","createMovieList","page","list","cookies","survey2","get","props","fromStep3","checkSurvey2Contains","movie_","width","height","padding","addMovieToSelection","starting","ending","slice","onShowSizeChange","current","setState","onPageChange","index","splice","ans","toggleVisible","set","reduceCookieSize","path","selectRandomMovies","checkSurveyComplete","componentWillMount","genreFilters","selectedMovies2","componentDidMount","componentWillReceiveProps","nextProps","displayList","i","movieId","_movieId","movies","wantNumber","maxNumber","numberList","num","slimCookie","title","rating","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport \"./MovieList.css\";\nimport \"./Movie\";\nimport Movie from \"./Movie\";\nimport MovieFullList1 from '../Assets/MovieFullList2';\nimport Part1Modal from \"./Part1Modal.jsx\";\nimport { Pagination } from 'antd';\nimport Cookies from 'universal-cookie';\n\nimport { Row, Col } from 'antd';\nimport SurveyWithPoster from \"./SurveyWithPoster\";\n\nexport default class MovieList extends React.Component {\n  childRef: React.RefObject<Part1Modal> = React.createRef();\n\n  state = {\n    genre: \"Genre 1\",\n    listOfMovies: Array,\n    filteredMovies: Array,\n    displayMovies: Array,\n    currentPage: 1,\n    pageSize: 150,\n    selectedMovies: Array,\n    surveyMovies: [],\n    selectedMovie2: Array,\n    surveyComplete: false\n  }\n\n  componentWillMount() {\n    var genreFilters = this.props.genreFilters\n    var yearFilter = this.props.yearFilter\n\n    let filteredMovies = []\n    if (genreFilters.length > 0)\n      filteredMovies = this.filterMovieList(MovieFullList1, genreFilters, yearFilter)\n    this.setState({\n      listOfMovies: MovieFullList1,\n      displayMovies: [],\n      filteredMovies: filteredMovies,\n      selectedMovies: [],\n      selectedMovies2: []\n    })\n  }\n\n  componentDidMount() {\n    let list = this.createMovieList(this.state.currentPage, this.state.pageSize)\n    this.setState({\n      displayMovies: list\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var genreFilters = nextProps.genreFilters\n    var yearFilter = nextProps.yearFilter\n    let filteredMovies = []\n    if (genreFilters.length > 0)\n      filteredMovies = this.filterMovieList(MovieFullList1, genreFilters, yearFilter)\n    this.setState({\n      filteredMovies: filteredMovies\n    }, () => {\n      //update display list \n      let displayList = this.createMovieList(1, this.state.pageSize)\n      this.setState({\n        displayMovies: displayList,\n        currentPage: 1\n      })\n    })\n  }\n\n\n  filterMovieList = (movieList, genreList, yearFilter) => {\n    let result1 = []\n    movieList.forEach(movie => {\n      var year = parseInt(movie.year)\n      var genres = movie.genres\n      var genresInArr = genres.split(',').map(item=>item.trim())\n      let intersect = genresInArr.filter(value => -1 !== genreList.indexOf(value))\n      let yearStart = 1995\n      let yearEnd = 2019\n\n      if(yearFilter !== 'All Movies') {\n        yearStart = parseInt(yearFilter.split('-')[0])\n        yearEnd = parseInt(yearFilter.split('-')[1])\n      }\n\n      if (intersect.length > 0 && yearStart <= year && year <= yearEnd)\n        result1.push(movie)\n    });\n    var ranchoose = []\n    var result = []\n    while (ranchoose.length < result1.length) {\n      var ranum = Math.floor(Math.random() * result1.length) + 0;\n      if (ranchoose.indexOf(ranum) == -1) {\n        ranchoose.push(ranum)\n        result.push(result1[ranum])\n      }\n    }\n    return result;\n  }\n\n\n\n\n  createMovieList = (page, pageSize) => {\n    let list = [];\n    //console.log(\"now rendering movie list \"+ JSON.stringify(this.state.listOfMovies))\n    const cookies = new Cookies();\n    let survey2 = cookies.get('survey2')\n    //console.log('survey 2 now contains' + JSON.stringify(survey2))\n    this.state.filteredMovies.forEach(movie => {\n      if (!movie['rating'] && movie['rating'] !== 0.0)\n        movie['rating'] = 0.0\n      if (this.props.fromStep3) {\n        if (!this.checkSurvey2Contains(survey2, movie)) {\n          var movie_ = <Col span={3} style={{ width: 'auto', height: 425, padding:5 }}> <Movie SingleMovie={movie} onAddMovie={this.addMovieToSelection} /></Col>\n          list.push(movie_)\n        }\n      } else {\n        var movie_ = <Col span={3} style={{ width: 'auto', height: 425, padding:5}}> <Movie SingleMovie={movie} onAddMovie={this.addMovieToSelection} /></Col>\n        list.push(movie_)\n      }\n    })\n\n    var starting = (page - 1) * pageSize;\n    var ending = (starting + pageSize) > this.state.filteredMovies.length ? this.state.filteredMovies.length : starting + pageSize\n\n    return list.slice(starting, ending);\n  }\n\n  onShowSizeChange = (current, pageSize) => {\n    var list = this.createMovieList(1, pageSize)\n    this.setState({\n      currentPage: 1,\n      pageSize: pageSize,\n      displayMovies: list\n    })\n  }\n\n  checkSurvey2Contains(survey2, movie) {\n    var result = false;\n    for (var i = 0; i < survey2.length; i++) {\n      var movieId = survey2[i].movieId\n      var _movieId = movie.movieId\n      if (movieId === _movieId)\n        result = true\n    }\n    return result;\n  }\n  onPageChange = (page, pageSize) => {\n    var list = this.createMovieList(page, pageSize)\n\n    this.setState({\n      currentPage: page,\n      displayMovies: list\n    })\n  }\n\n  addMovieToSelection = (movie) => {\n    var fromStep3 = this.props.fromStep3\n    //console.log(\"from Step 3 \" + fromStep3)\n    const cookies = new Cookies();\n\n    if (fromStep3) {\n      var selectedMovies = this.state.selectedMovies\n      if (selectedMovies.length >= 0 && selectedMovies.length < 20) {\n        if (selectedMovies.indexOf(movie) === -1)\n          selectedMovies.push(movie)\n        else {\n          if (movie['rating'] <= 0) {\n            var index = selectedMovies.indexOf(movie)\n            selectedMovies.splice(index, 1)\n          }\n        }\n      }\n      if (selectedMovies.length === 3) {\n        selectedMovies.forEach(movie => {\n          movie.ans = [8, 8, 8, 8, 8, 8, 8] // initialze ans for survery qns\n        });\n        this.childRef.current.toggleVisible()\n      }\n      this.setState({\n        surveyMovies: selectedMovies\n      })\n    } else {\n      var selectedMovies = this.state.selectedMovies\n      if (selectedMovies.length >= 0 && selectedMovies.length < 20) {\n        if (selectedMovies.indexOf(movie) === -1)\n          selectedMovies.push(movie)\n        else {\n          if (movie['rating'] <= 0) {\n            var index = selectedMovies.indexOf(movie)\n            selectedMovies.splice(index, 1)\n          }\n        }\n      }\n      //set the number of movies required selection \n      if (selectedMovies.length === 15) {\n        //change above to 20, in production\n        cookies.set('survey2a', this.reduceCookieSize(selectedMovies), { path: '/' });\n        //console.log(\"survey 2a \" + JSON.stringify(selectedMovies))\n        selectedMovies = this.selectRandomMovies(selectedMovies, 5, 15) //change no. as well if change no. of selected movies\n        selectedMovies.forEach(movie => {\n          movie.ans = [8, 8, 8, 8, 8, 8, 8] // initialze ans for survery qns\n        });\n        this.childRef.current.toggleVisible()\n      }\n      this.setState({\n        surveyMovies: selectedMovies\n      })\n    }\n  }\n\n  selectRandomMovies(movies, wantNumber, maxNumber) {\n    var numberList = []\n    var movieList = []\n    while (numberList.length < wantNumber) {\n      var num = Math.floor(Math.random() * ((maxNumber - 1) - 0 + 1)) + 0;\n      if (numberList.indexOf(num) == -1) {\n        numberList.push(num)\n        movieList.push(movies[num])\n      }\n    }\n    return movieList\n  }\n\n  checkSurveyComplete = (value) => {\n\n    this.setState({\n      surveyComplete: true\n    })\n  }\n\n  reduceCookieSize(selectedMovies){\n    let slimCookie = [] \n    for(var i=0;i<selectedMovies.length;i++){\n      var movie = {}\n      movie.title = selectedMovies[i].title\n      movie.movieId = selectedMovies[i].movieId\n      movie.rating = selectedMovies[i].rating\n      movie.ans = selectedMovies[i].ans\n      slimCookie.push(movie)\n    }\n\n    return slimCookie;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"movie-counter\">\n          You have selected {this.state.selectedMovies.length}/{this.props.fromStep3 ? 3 : 15} movies\n          </div>\n        <div className=\"list-panel\">\n\n          <div className=\"display-movie\">\n            <Row gutter={[24, 20]} justify=\"space-between\" >\n              {this.state.displayMovies}\n            </Row>\n          </div>\n\n          <Pagination\n            showSizeChanger\n            pageSizeOptions={['50', '100', '150', '200']}\n            onShowSizeChange={this.onShowSizeChange}\n            current={this.state.currentPage}\n            defaultCurrent={2}\n            pageSize={this.state.pageSize}\n            onChange={this.onPageChange}\n            total={this.state.filteredMovies.length}\n          />\n          <Part1Modal ref={this.childRef} selectedMovies={this.state.surveyMovies} onSurveyComplete={this.checkSurveyComplete} fromStep3={this.props.fromStep3}></Part1Modal>\n        </div>\n      </div>\n\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}