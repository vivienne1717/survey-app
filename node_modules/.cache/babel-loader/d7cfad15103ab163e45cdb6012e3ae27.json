{"ast":null,"code":"var _jsxFileName = \"/Users/wei/Desktop/Project/Recommendation/Pre-exp Survey/website/survey-app1-1/src/Pages/Step3.jsx\";\nimport React from \"react\";\nimport \"./MainContentHolder.css\";\nimport { Checkbox } from 'antd';\nimport MovieList from './MovieList';\nimport movieFullList1 from \"../Assets/MovieFullList1\";\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport Cookies from 'universal-cookie';\nconst CheckboxGroup = Checkbox.Group;\nconst plainOptions = ['Genre1', 'Genre2', 'Genre3', 'Genre4', 'Genre5', 'Genre6'];\nconst defaultCheckedList = ['Genre1', 'Genre2', 'Genre3', 'Genre4', 'Genre5', 'Genr6'];\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Sider = Layout.Sider;\nconst yearOptions = ['', 'All Movies', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019'];\nexport default class Step3 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false,\n      plainOptions: plainOptions,\n      selectedYearKey: 1\n    };\n\n    this.onChange = checkedList => {\n      this.setState({\n        checkedList,\n        indeterminate: !!this.state.checkedList.length && this.state.checkedList.length < this.state.plainOptions.length,\n        checkAll: this.state.checkedList.length === this.state.plainOptions.length\n      }, () => {\n        console.log(\"checked list \" + JSON.stringify(this.state.checkedList));\n      });\n    };\n\n    this.onCheckAllChange = e => {\n      this.setState({\n        checkedList: e.target.checked ? this.state.plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      }, () => {\n        console.log(\"checked list \" + JSON.stringify(this.state.checkedList));\n      });\n    };\n\n    this.onMenuItemClick = e => {\n      this.setState({\n        selectedYearKey: e.key\n      });\n    };\n  }\n\n  componentWillMount() {\n    const cookies = new Cookies();\n    let survey1 = cookies.get('survey1');\n    let survey2 = cookies.get('survey2');\n\n    if (!survey1 || !survey2) {\n      window.location.href = '../Step1';\n    }\n\n    var allGenre = this.getAllGenre();\n    this.setState({\n      plainOptions: allGenre,\n      checkedList: allGenre\n    });\n  }\n\n  getAllGenre() {\n    var allGenre = [];\n\n    for (var i = 0; i < movieFullList1.length; i++) {\n      var movie = movieFullList1[i];\n      var genre = movie.genres;\n      var genresInArr = genre.split(',').map(item => item.trim());\n      genresInArr.forEach(elm => {\n        if (allGenre.indexOf(elm) === -1 && elm !== 'News') allGenre.push(elm);\n      });\n    }\n\n    return allGenre.sort();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Header, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Movie List\")), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      width: 200,\n      style: {\n        background: '#f0f2f5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      mode: \"inline\",\n      defaultSelectedKeys: ['1'],\n      defaultOpenKeys: ['sub1'],\n      onClick: this.onMenuItemClick,\n      style: {\n        height: '100%',\n        borderRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(SubMenu, {\n      key: \"sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"video-camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"Years of Movies\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, yearOptions[1]), React.createElement(Menu.Item, {\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, yearOptions[2]), React.createElement(Menu.Item, {\n      key: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, yearOptions[3]), React.createElement(Menu.Item, {\n      key: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, yearOptions[4]), React.createElement(Menu.Item, {\n      key: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, yearOptions[5]), React.createElement(Menu.Item, {\n      key: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, yearOptions[6])))), React.createElement(Layout, {\n      style: {\n        padding: '0 24px 24px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      style: {\n        margin: '16px 0',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Movies\"), React.createElement(Breadcrumb.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, yearOptions[this.state.selectedYearKey])), React.createElement(Content, {\n      style: {\n        background: '#f0f2f5',\n        padding: 24,\n        margin: 0,\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"step2-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Genre-filters\",\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: '20px',\n        paddingBottom: '10px',\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Survey Part 3: Please select 3 more watched movies that are different from the movies you usually watch yet are interesting to you.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"Kindly avoid the 5 movies which you have already answered questions about.\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      indeterminate: this.state.indeterminate,\n      onChange: this.onCheckAllChange,\n      checked: this.state.checkAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"All genres\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        borderBottom: '1px solid grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(CheckboxGroup, {\n      options: this.state.plainOptions,\n      value: this.state.checkedList,\n      onChange: this.onChange,\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Movie-List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(MovieList, {\n      ref: this.childRef,\n      genreFilters: this.state.checkedList,\n      yearFilter: yearOptions[this.state.selectedYearKey],\n      fromStep3: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wei/Desktop/Project/Recommendation/Pre-exp Survey/website/survey-app1-1/src/Pages/Step3.jsx"],"names":["React","Checkbox","MovieList","movieFullList1","Layout","Menu","Breadcrumb","Icon","Cookies","CheckboxGroup","Group","plainOptions","defaultCheckedList","SubMenu","Header","Content","Sider","yearOptions","Step3","Component","state","checkedList","indeterminate","checkAll","selectedYearKey","onChange","setState","length","console","log","JSON","stringify","onCheckAllChange","e","target","checked","onMenuItemClick","key","componentWillMount","cookies","survey1","get","survey2","window","location","href","allGenre","getAllGenre","i","movie","genre","genres","genresInArr","split","map","item","trim","forEach","elm","indexOf","push","sort","componentDidMount","render","background","height","borderRight","padding","margin","textAlign","minHeight","fontSize","paddingBottom","fontWeight","borderBottom","marginBottom","childRef"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./MainContentHolder.css\";\nimport { Checkbox } from 'antd';\nimport MovieList from './MovieList';\nimport movieFullList1 from \"../Assets/MovieFullList1\";\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport Cookies from 'universal-cookie';\n\nconst CheckboxGroup = Checkbox.Group;\n\nconst plainOptions = ['Genre1', 'Genre2', 'Genre3', 'Genre4', 'Genre5', 'Genre6'];\nconst defaultCheckedList = ['Genre1', 'Genre2', 'Genre3', 'Genre4', 'Genre5', 'Genr6'];\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst yearOptions = ['', 'All Movies','1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']\nexport default class Step3 extends React.Component {\n    state = {\n        checkedList: defaultCheckedList,\n        indeterminate: true,\n        checkAll: false,\n        plainOptions: plainOptions,\n        selectedYearKey: 1\n    };\n\n    onChange = checkedList => {\n        this.setState({\n            checkedList,\n            indeterminate: !!this.state.checkedList.length && this.state.checkedList.length < this.state.plainOptions.length,\n            checkAll: this.state.checkedList.length === this.state.plainOptions.length,\n        }, () => {\n            console.log(\"checked list \" + JSON.stringify(this.state.checkedList))\n        });\n    };\n\n    onCheckAllChange = e => {\n        this.setState({\n            checkedList: e.target.checked ? this.state.plainOptions : [],\n            indeterminate: false,\n            checkAll: e.target.checked,\n        }, () => {\n            console.log(\"checked list \" + JSON.stringify(this.state.checkedList))\n        });\n    };\n    componentWillMount() {\n        const cookies = new Cookies();\n        let survey1 = cookies.get('survey1')\n        let survey2 = cookies.get('survey2')\n        if(!survey1 || !survey2){\n            window.location.href = '../Step1'\n        }\n        var allGenre = this.getAllGenre()\n        this.setState({\n            plainOptions: allGenre,\n            checkedList: allGenre\n        })\n    }\n\n    getAllGenre() {\n        var allGenre = []\n        for (var i = 0; i < movieFullList1.length; i++) {\n            var movie = movieFullList1[i]\n            var genre = movie.genres\n            var genresInArr = genre.split(',').map(item=>item.trim())\n            genresInArr.forEach(elm => {\n                if (allGenre.indexOf(elm) === -1 && elm !== 'News')\n                    allGenre.push(elm)\n            })\n        }\n        return allGenre.sort();\n    }\n\n    onMenuItemClick = e => {\n        this.setState({\n            selectedYearKey: e.key\n        })\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n\n            <div>\n                <Layout>\n                    <Header className=\"header\">\n                        <div className=\"logo\">\n                            Movie List\n                        </div>\n\n                    </Header>\n                    <Layout>\n                        <Sider width={200} style={{ background: '#f0f2f5' }}>\n                            <Menu\n                                mode=\"inline\"\n                                defaultSelectedKeys={['1']}\n                                defaultOpenKeys={['sub1']}\n                                onClick={this.onMenuItemClick}\n                                style={{ height: '100%', borderRight: 0 }}\n                            >\n                                <SubMenu\n                                    key=\"sub1\"\n                                    title={\n                                        <span>\n                                            <Icon type=\"video-camera\" />\n                                            Years of Movies\n                                        </span>\n                                    }\n                                >\n                                    <Menu.Item key=\"1\">{yearOptions[1]}</Menu.Item>\n                                    <Menu.Item key=\"2\">{yearOptions[2]}</Menu.Item>\n                                    <Menu.Item key=\"3\">{yearOptions[3]}</Menu.Item>\n                                    <Menu.Item key=\"4\">{yearOptions[4]}</Menu.Item>\n                                    <Menu.Item key=\"5\">{yearOptions[5]}</Menu.Item>\n                                    <Menu.Item key=\"6\">{yearOptions[6]}</Menu.Item>\n                                </SubMenu>\n                            </Menu>\n                        </Sider>\n                        <Layout style={{ padding: '0 24px 24px' }}>\n\n                            <Breadcrumb style={{ margin: '16px 0', textAlign: 'left' }}>\n                                <Breadcrumb.Item>Movies</Breadcrumb.Item>\n                                <Breadcrumb.Item>{yearOptions[this.state.selectedYearKey]}</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                style={{\n                                    background: '#f0f2f5',\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n\n                                {/*main content */}\n                                <div className='step2-1'>\n                                    <div className='Genre-filters' style={{ textAlign: 'left' }}>\n                                        <div style={{ fontSize: '20px', paddingBottom: '10px', fontWeight: 'bold' }}>\n                                        Survey Part 3: Please select 3 more watched movies that are different from the movies you usually watch yet are interesting to you. \n                                        <br/>\n                                        Kindly avoid the 5 movies which you have already answered questions about. \n                                        </div>\n\n                                        <div >\n                                            <Checkbox\n                                                indeterminate={this.state.indeterminate}\n                                                onChange={this.onCheckAllChange}\n                                                checked={this.state.checkAll}\n                                            >\n                                                All genres\n                                            </Checkbox>\n                                        </div>\n                                        <br />\n                                        <div style={{ borderBottom: '1px solid grey' }}>\n                                            <CheckboxGroup\n                                                options={this.state.plainOptions}\n                                                value={this.state.checkedList}\n                                                onChange={this.onChange}\n                                                style={{ marginBottom: '15px' }}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className='Movie-List'>\n                                        <MovieList ref={this.childRef} genreFilters={this.state.checkedList} yearFilter={yearOptions[this.state.selectedYearKey]} fromStep3={true}></MovieList>\n                                    </div>\n                                </div >\n                            </Content>\n                        </Layout>\n                    </Layout>\n                </Layout>\n            </div>\n\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}